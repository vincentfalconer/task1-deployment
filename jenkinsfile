pipeline {
    agent any

    environment {
        APP_IMAGE = "task1-app:latest"
        NGINX_IMAGE = "task1-nginx:latest"
    }

    stages {
        stage('Clean-up') {
            steps {
                sh '''
                docker rm -f $(docker ps -aq) || true
                docker rmi -f $(docker images -q) || true
                '''
            }
        }

        stage('Setup Networks/Volumes') {
            steps {
                sh '''
                docker network create task1-net || true
                docker volume create task1-data || true
                '''
            }
        }

        stage('Build Images') {
            steps {
                sh '''
                cd Task1
                docker build -t $APP_IMAGE -f Dockerfile .
                docker build -t $NGINX_IMAGE -f Dockerfile.nginx .
                '''
            }
        }

      stage('Run Containers') {
          steps {
              sh '''
              docker run -d --name app --network task1-net -v task1-data:/app/data $APP_IMAGE
              docker run -d --name nginx --network task1-net -p 80:80 -v "$(pwd)/Task1/nginx.conf:/etc/nginx/nginx.conf" $NGINX_IMAGE
              '''
            }
        }
    }

    post {
        success {
            echo "Deployment completed successfully!"
        }
        failure {
            echo "Deployment failed!"
        }
    }
}
